"""
Django settings for booking project.

Generated by 'django-admin startproject' using Django 5.0.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

USE_TZ = True
TIME_ZONE = 'UTC'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dpgvzr#0apm0#rb5qy7ik6k0p75=0&y(82*$$%af*5$&h5a=_l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['dcoffee.robertfall.uk','www.dcoffee.robertfall.uk']

# Application definition

INSTALLED_APPS = [
    # Default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookingsys',  # Your custom app
    'pages',  # Your custom app

    # Third-party apps
    'rest_framework',                # Django REST Framework
    'allauth',                        # Django Allauth (for authentication)
    'allauth.account',                # Allauth specific settings
    'allauth.socialaccount',          # Allauth social login
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'booking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'booking.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

USE_I18N = True

# Time zone settings
TIME_ZONE = 'UTC'

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Global static directory
]

STATIC_ROOT = '/home2/dstatic/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ** New or Updated Settings **

# Allauth settings
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default authentication
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
)

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Enforce email verification
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False  # Optional: Allow login using email only
LOGIN_REDIRECT_URL = '/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout
ACCOUNT_LOGOUT_ON_GET = True  # Enable logout on GET request

# Celery Configuration
CELERY_BROKER_URL = 'redis://localhost:8000' # Use Redis as broker (can replace with RabbitMQ)
CELERY_RESULT_BACKEND = 'redis://localhost:8000'  # Store results in Redis
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

# Stripe settings (for payment integration)
STRIPE_TEST_PUBLIC_KEY = 'your-public-key'
STRIPE_TEST_SECRET_KEY = 'your-secret-key'

# Crispy forms settings (for bootstrap styling)
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Notifications settings (for sending notifications)
NOTIFICATIONS_USE_JSONFIELD = True

# Tagging settings (for tagging functionality)
TAGGIT_CASE_INSENSITIVE = True

# settings.py

LOGIN_REDIRECT_URL = '/'  # The page users will be redirected to after logging in
LOGOUT_REDIRECT_URL = '/'  # The page users will be redirected to after logging out
